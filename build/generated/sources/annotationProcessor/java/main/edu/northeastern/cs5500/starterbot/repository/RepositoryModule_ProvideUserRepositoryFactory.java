// Generated by Dagger (https://dagger.dev).
package edu.northeastern.cs5500.starterbot.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import edu.northeastern.cs5500.starterbot.model.User;
import edu.northeastern.cs5500.starterbot.service.MongoDBService;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideUserRepositoryFactory implements Factory<GenericRepository<User>> {
  private final RepositoryModule module;

  private final Provider<MongoDBService> mongoDBServiceProvider;

  public RepositoryModule_ProvideUserRepositoryFactory(RepositoryModule module,
      Provider<MongoDBService> mongoDBServiceProvider) {
    this.module = module;
    this.mongoDBServiceProvider = mongoDBServiceProvider;
  }

  @Override
  public GenericRepository<User> get() {
    return provideUserRepository(module, mongoDBServiceProvider.get());
  }

  public static RepositoryModule_ProvideUserRepositoryFactory create(RepositoryModule module,
      Provider<MongoDBService> mongoDBServiceProvider) {
    return new RepositoryModule_ProvideUserRepositoryFactory(module, mongoDBServiceProvider);
  }

  public static GenericRepository<User> provideUserRepository(RepositoryModule instance,
      MongoDBService mongoDBService) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserRepository(mongoDBService));
  }
}
